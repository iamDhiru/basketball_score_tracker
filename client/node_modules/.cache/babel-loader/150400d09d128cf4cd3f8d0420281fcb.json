{"ast":null,"code":"var _jsxFileName = \"D:\\\\basketball\\\\client\\\\src\\\\components\\\\MatchList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllMatches } from '../redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Matchlist = props => {\n  _s();\n\n  var _props$matches;\n\n  useEffect(() => {\n    props.getAllMatches();\n  }, []);\n\n  if (props.matches.length < 0) {\n    return 'loading...';\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container border d-flex justify-content-center\",\n    style: {\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5 border\",\n      style: {\n        width: \"400px\",\n        overflowY: \"auto\",\n        overflowX: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Match List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), (_props$matches = props.matches) === null || _props$matches === void 0 ? void 0 : _props$matches.map((match, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card shadow my-2 py-2\",\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row px-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Team1: \", match.team1Name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Score: \", match.team1Score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Team2: \", match.team2Name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Score: \", match.team2Score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center  mt-2\",\n            children: [\"Winner: \", match.winner]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Matchlist, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Matchlist;\n\nconst mapStateToProps = state => {\n  return {\n    matches: state.match.match\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllMatches: () => dispatch(getAllMatches())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Matchlist);\n\nvar _c;\n\n$RefreshReg$(_c, \"Matchlist\");","map":{"version":3,"sources":["D:/basketball/client/src/components/MatchList.jsx"],"names":["React","useEffect","connect","getAllMatches","Matchlist","props","matches","length","height","width","overflowY","overflowX","map","match","index","team1Name","team1Score","team2Name","team2Score","winner","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA6B,UAA7B;;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAAA;;AAEvBJ,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,KAAK,CAACF,aAAN;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAGE,KAAK,CAACC,OAAN,CAAcC,MAAd,GAAuB,CAA1B,EAA4B;AACxB,WAAO,YAAP;AACH,GAFD,MAGK,oBACD;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAgE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAC;AAAT,KAAvE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,SAAS,EAAC,MAA1B;AAAkCC,QAAAA,SAAS,EAAC;AAA5C,OAApC;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,oBAGIN,KAAK,CAACC,OAHV,mDAGI,eAAeM,GAAf,CAAmB,CAACC,KAAD,EAAQC,KAAR,KAAgB;AAC/B,4BACI;AAAiB,UAAA,SAAS,EAAC,uBAA3B;AAAmD,UAAA,KAAK,EAAE;AAACL,YAAAA,KAAK,EAAC;AAAP,WAA1D;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,sCACI;AAAA,sCAAaI,KAAK,CAACE,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,sCAAaF,KAAK,CAACG,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,sCACI;AAAA,sCAAaH,KAAK,CAACI,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,sCAAaJ,KAAK,CAACK,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAWA;AAAK,YAAA,SAAS,EAAC,qCAAf;AAAA,mCACaL,KAAK,CAACM,MADnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXA;AAAA,WAAUL,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAiBH,OAlBD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADC;AA+BR,CAxCD;;GAAMV,S;;KAAAA,S;;AA0CN,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHf,IAAAA,OAAO,EAAEe,KAAK,CAACR,KAAN,CAAYA;AADlB,GAAP;AAGH,CAJD;;AAKA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHpB,IAAAA,aAAa,EAAE,MAAMoB,QAAQ,CAACpB,aAAa,EAAd;AAD1B,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA8ClB,SAA9C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {getAllMatches}  from '../redux'\r\n\r\n\r\nconst Matchlist = props => {\r\n    \r\n    useEffect(()=>{\r\n        props.getAllMatches();\r\n    },[])\r\n\r\n    if(props.matches.length < 0){\r\n        return 'loading...'\r\n    }\r\n    else return (\r\n        <div className='container border d-flex justify-content-center' style={{ height:\"100vh\"}}>\r\n            <div className='mt-5 border' style={{width:\"400px\", overflowY:\"auto\", overflowX:\"hidden\"}}>\r\n            <h4> Match List</h4>\r\n            {\r\n                props.matches?.map((match, index)=>{\r\n                    return (\r\n                        <div key={index} className='card shadow my-2 py-2' style={{width:\"100%\",}}>\r\n                        <div className='row px-2'>\r\n                            <div className='col-6'>\r\n                                <div>Team1: {match.team1Name}</div>\r\n                                <div>Score: {match.team1Score}</div>\r\n                            </div>\r\n                            <div className='col-6'>\r\n                                <div>Team2: {match.team2Name}</div>\r\n                                <div>Score: {match.team2Score}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='d-flex justify-content-center  mt-2'>\r\n                            Winner: {match.winner}\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })\r\n            }\r\n            \r\n            \r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        matches: state.match.match\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllMatches: () => dispatch(getAllMatches())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Matchlist);\r\n"]},"metadata":{},"sourceType":"module"}